buildscript {
	repositories {
		mavenCentral()
		maven {
			name = "forge"
			url = "https://maven.minecraftforge.net/"
		}
		maven {
			name = "sonatype"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
	}
	dependencies {
		classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
			changing = true
		}
	}
}

apply plugin: 'forge'

version = "1.5"
group= "com.suslovila.cybersus" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "cybersus"

// Активация поддержки Java 8 (без этой строчки будет использоваться Java 6)
targetCompatibility = sourceCompatibility = JavaVersion.VERSION_1_8

minecraft {
	version = "1.7.10-10.13.4.1614-1.7.10"
	mappings = "stable_12"
}

tasks.withType(JavaCompile).configureEach {
}

repositories {
	mavenCentral()
	maven { url = "https://repo.spongepowered.org/maven" }
	flatDir {
		dirs 'lib'
	}
}
//version = "1.7.10-4.2.3.5"
//group= "thaumcraft"
//archivesBaseName = "Thaumcraft"
configurations {
	embed
	compile.extendsFrom(embed)
}


jar {
	from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
}

dependencies {
	implementation fileTree(dir: 'lib', include: ['*-deobf.jar'])
	compileOnly fileTree(dir: 'lib', include: ['*-dev.jar'])
	annotationProcessor 'org.ow2.asm:asm-debug-all:5.0.3'
}

jar {
	manifest {
		attributes([
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : project.version,
				"FMLCorePluginContainsFMLMod": "true",  // Не забываем указать эти два флага,
				"ForceLoadAsMod": "true",               // чтобы Forge нормально загрузил и мод, и миксины
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}
processResources
		{
			// this will ensure that this task is redone when the versions change.
			inputs.property "version", project.version
			inputs.property "mcversion", project.minecraft.version

			// replace stuff in mcmod.info, nothing else
			from(sourceSets.main.resources.srcDirs) {
				include 'mcmod.info'

				// replace version and mcversion
				expand 'version':project.version, 'mcversion':project.minecraft.version
			}

			// copy everything else, thats not the mcmod.info
			from(sourceSets.main.resources.srcDirs) {
				exclude 'mcmod.info'
			}
		}



compileJava {
	options.compilerArgs += [
			'-Xlint:-processing',
			"-AreobfSrgFile=${project.file('build/srgs/mcp-srg.srg').canonicalPath}"
	]
}

tasks.register('copySrgs', Copy) {
	dependsOn 'genSrgs'
	from plugins.getPlugin("forge").delayedFile('{SRG_DIR}')

	include '**/*.srg'
	into 'build/srgs'
}

compileJava.dependsOn copySrgs


jar {
	manifest {
		attributes 'FMLAT': 'cybersus_at.cfg'
	}
}

tasks.register('deobfJar', Jar) {
	from sourceSets.main.output
	archiveClassifier.set('deobf')
}

tasks.register('sourceJar', Jar) {
	from sourceSets.main.allSource
	archiveClassifier.set('sources')
}
build.finalizedBy deobfJar, sourceJar


dependencies {
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
	testImplementation 'org.mockito:mockito-core:5.5.0'
}

test {
	useJUnitPlatform()
}
